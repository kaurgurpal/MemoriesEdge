//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace MemoriesEdge.AdminService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManageFeedBack", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class ManageFeedBack : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FeedbackAnswerField;
        
        private string FeedbackQuestionField;
        
        private int FeedbackQuestionIdField;
        
        private bool StatusField;
        
        private int feedbackAnswerIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeedbackAnswer {
            get {
                return this.FeedbackAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackAnswerField, value) != true)) {
                    this.FeedbackAnswerField = value;
                    this.RaisePropertyChanged("FeedbackAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeedbackQuestion {
            get {
                return this.FeedbackQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackQuestionField, value) != true)) {
                    this.FeedbackQuestionField = value;
                    this.RaisePropertyChanged("FeedbackQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeedbackQuestionId {
            get {
                return this.FeedbackQuestionIdField;
            }
            set {
                if ((this.FeedbackQuestionIdField.Equals(value) != true)) {
                    this.FeedbackQuestionIdField = value;
                    this.RaisePropertyChanged("FeedbackQuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int feedbackAnswerId {
            get {
                return this.feedbackAnswerIdField;
            }
            set {
                if ((this.feedbackAnswerIdField.Equals(value) != true)) {
                    this.feedbackAnswerIdField = value;
                    this.RaisePropertyChanged("feedbackAnswerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewFeedBack", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class ViewFeedBack : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AdditionalFeedbackField;
        
        private string AnswerField;
        
        private System.DateTime FeedbackDateField;
        
        private string QuestionField;
        
        private int UserIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalFeedback {
            get {
                return this.AdditionalFeedbackField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalFeedbackField, value) != true)) {
                    this.AdditionalFeedbackField = value;
                    this.RaisePropertyChanged("AdditionalFeedback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FeedbackDate {
            get {
                return this.FeedbackDateField;
            }
            set {
                if ((this.FeedbackDateField.Equals(value) != true)) {
                    this.FeedbackDateField = value;
                    this.RaisePropertyChanged("FeedbackDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManageOperator", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class ManageOperator : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string PhoneField;
        
        private string StatusField;
        
        private int UserIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManageRegisteredUsers", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class ManageRegisteredUsers : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DOBField;
        
        private string MobileField;
        
        private string NameField;
        
        private string PhoneField;
        
        private string StatusField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class Question : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string SecurityQuestionField;
        
        private int SecurityQuestionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityQuestion {
            get {
                return this.SecurityQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityQuestionField, value) != true)) {
                    this.SecurityQuestionField = value;
                    this.RaisePropertyChanged("SecurityQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecurityQuestionId {
            get {
                return this.SecurityQuestionIdField;
            }
            set {
                if ((this.SecurityQuestionIdField.Equals(value) != true)) {
                    this.SecurityQuestionIdField = value;
                    this.RaisePropertyChanged("SecurityQuestionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryStateCity", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class CountryStateCity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CityField;
        
        private int CityIdField;
        
        private string CountryField;
        
        private int CountryIdField;
        
        private string StateField;
        
        private int StateIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewRegisteredUser", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class NewRegisteredUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string AnswerField;
        
        private string CityField;
        
        private string ConfirmPasswordField;
        
        private string CountryField;
        
        private System.DateTime DateOfBirthField;
        
        private string EmailIdField;
        
        private string GenderField;
        
        private string ImagePathField;
        
        private string InitialsField;
        
        private string MobileField;
        
        private string NameField;
        
        private string PasswordField;
        
        private string PhoneField;
        
        private string PinCodeField;
        
        private string SecurityAnswerField;
        
        private int SecurityQuestionIdField;
        
        private string StateField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAnswer {
            get {
                return this.SecurityAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAnswerField, value) != true)) {
                    this.SecurityAnswerField = value;
                    this.RaisePropertyChanged("SecurityAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecurityQuestionId {
            get {
                return this.SecurityQuestionIdField;
            }
            set {
                if ((this.SecurityQuestionIdField.Equals(value) != true)) {
                    this.SecurityQuestionIdField = value;
                    this.RaisePropertyChanged("SecurityQuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddEditOperator", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class AddEditOperator : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string CityField;
        
        private int CityIdField;
        
        private string ConfirmPasswordField;
        
        private string CountryField;
        
        private int CountryIdField;
        
        private System.DateTime DateOfBirthField;
        
        private string EmailIdField;
        
        private string GenderField;
        
        private string InitialsField;
        
        private string MobileField;
        
        private string NameField;
        
        private string PasswordField;
        
        private string PhoneField;
        
        private string PinCodeField;
        
        private string StateField;
        
        private int StateIdField;
        
        private string StatusField;
        
        private int UserIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLoginRegisterUser", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class UserLoginRegisterUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string InitialsField;
        
        private int UserIdField;
        
        private string UserNameField;
        
        private string UserStatusField;
        
        private string UserTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserStatus {
            get {
                return this.UserStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.UserStatusField, value) != true)) {
                    this.UserStatusField = value;
                    this.RaisePropertyChanged("UserStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForgotPassword", Namespace="http://schemas.datacontract.org/2004/07/MemoriesEdge.Web")]
    public partial class ForgotPassword : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AnswerField;
        
        private string PasswordField;
        
        private int SecurityQuestionIdField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecurityQuestionId {
            get {
                return this.SecurityQuestionIdField;
            }
            set {
                if ((this.SecurityQuestionIdField.Equals(value) != true)) {
                    this.SecurityQuestionIdField = value;
                    this.RaisePropertyChanged("SecurityQuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminService.IwcfAdmin")]
    public interface IwcfAdmin {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/SaveAnswers", ReplyAction="http://tempuri.org/IwcfAdmin/SaveAnswersResponse")]
        System.IAsyncResult BeginSaveAnswers(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState);
        
        int EndSaveAnswers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/UpdateAnswers", ReplyAction="http://tempuri.org/IwcfAdmin/UpdateAnswersResponse")]
        System.IAsyncResult BeginUpdateAnswers(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState);
        
        int EndUpdateAnswers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetUsersFeedback", ReplyAction="http://tempuri.org/IwcfAdmin/GetUsersFeedbackResponse")]
        System.IAsyncResult BeginGetUsersFeedback(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ViewFeedBack> EndGetUsersFeedback(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetAllUsers", ReplyAction="http://tempuri.org/IwcfAdmin/GetAllUsersResponse")]
        System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> EndGetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetUser", ReplyAction="http://tempuri.org/IwcfAdmin/GetUserResponse")]
        System.IAsyncResult BeginGetUser(string UserName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> EndGetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/ChangeStatus", ReplyAction="http://tempuri.org/IwcfAdmin/ChangeStatusResponse")]
        System.IAsyncResult BeginChangeStatus(int UserId, System.AsyncCallback callback, object asyncState);
        
        int EndChangeStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/DisplayAllUserDetail", ReplyAction="http://tempuri.org/IwcfAdmin/DisplayAllUserDetailResponse")]
        System.IAsyncResult BeginDisplayAllUserDetail(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageRegisteredUsers> EndDisplayAllUserDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/DisplaySpecificUser", ReplyAction="http://tempuri.org/IwcfAdmin/DisplaySpecificUserResponse")]
        System.IAsyncResult BeginDisplaySpecificUser(MemoriesEdge.AdminService.ManageRegisteredUsers manage, System.AsyncCallback callback, object asyncState);
        
        MemoriesEdge.AdminService.ManageRegisteredUsers EndDisplaySpecificUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetSecurityQuestions", ReplyAction="http://tempuri.org/IwcfAdmin/GetSecurityQuestionsResponse")]
        System.IAsyncResult BeginGetSecurityQuestions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.Question> EndGetSecurityQuestions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetCountry", ReplyAction="http://tempuri.org/IwcfAdmin/GetCountryResponse")]
        System.IAsyncResult BeginGetCountry(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetCountry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetState", ReplyAction="http://tempuri.org/IwcfAdmin/GetStateResponse")]
        System.IAsyncResult BeginGetState(int CountryId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetCity", ReplyAction="http://tempuri.org/IwcfAdmin/GetCityResponse")]
        System.IAsyncResult BeginGetCity(int StateId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetCity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/CheckAvailability", ReplyAction="http://tempuri.org/IwcfAdmin/CheckAvailabilityResponse")]
        System.IAsyncResult BeginCheckAvailability(string UserName, System.AsyncCallback callback, object asyncState);
        
        int EndCheckAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/InsertNewUser", ReplyAction="http://tempuri.org/IwcfAdmin/InsertNewUserResponse")]
        System.IAsyncResult BeginInsertNewUser(MemoriesEdge.AdminService.NewRegisteredUser objNewUser, System.AsyncCallback callback, object asyncState);
        
        int EndInsertNewUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetAllCountry", ReplyAction="http://tempuri.org/IwcfAdmin/GetAllCountryResponse")]
        System.IAsyncResult BeginGetAllCountry(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetAllCountry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetAllState", ReplyAction="http://tempuri.org/IwcfAdmin/GetAllStateResponse")]
        System.IAsyncResult BeginGetAllState(int CountryId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetAllState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetAllCity", ReplyAction="http://tempuri.org/IwcfAdmin/GetAllCityResponse")]
        System.IAsyncResult BeginGetAllCity(int StateId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetAllCity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/CheckUserAvailability", ReplyAction="http://tempuri.org/IwcfAdmin/CheckUserAvailabilityResponse")]
        System.IAsyncResult BeginCheckUserAvailability(string UserName, System.AsyncCallback callback, object asyncState);
        
        int EndCheckUserAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/AddNewUser", ReplyAction="http://tempuri.org/IwcfAdmin/AddNewUserResponse")]
        System.IAsyncResult BeginAddNewUser(MemoriesEdge.AdminService.AddEditOperator objNewUser, System.AsyncCallback callback, object asyncState);
        
        int EndAddNewUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetDetail", ReplyAction="http://tempuri.org/IwcfAdmin/GetDetailResponse")]
        System.IAsyncResult BeginGetDetail(MemoriesEdge.AdminService.AddEditOperator entity, System.AsyncCallback callback, object asyncState);
        
        MemoriesEdge.AdminService.AddEditOperator EndGetDetail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/LoginUser", ReplyAction="http://tempuri.org/IwcfAdmin/LoginUserResponse")]
        System.IAsyncResult BeginLoginUser(string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        MemoriesEdge.AdminService.UserLoginRegisterUser EndLoginUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetPassword", ReplyAction="http://tempuri.org/IwcfAdmin/GetPasswordResponse")]
        System.IAsyncResult BeginGetPassword(string UserName, System.AsyncCallback callback, object asyncState);
        
        MemoriesEdge.AdminService.ForgotPassword EndGetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetUserPassword", ReplyAction="http://tempuri.org/IwcfAdmin/GetUserPasswordResponse")]
        System.IAsyncResult BeginGetUserPassword(int UserId, System.AsyncCallback callback, object asyncState);
        
        string EndGetUserPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/UpdatePassword", ReplyAction="http://tempuri.org/IwcfAdmin/UpdatePasswordResponse")]
        System.IAsyncResult BeginUpdatePassword(int UserId, string NewPassword, System.AsyncCallback callback, object asyncState);
        
        int EndUpdatePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetAllQuestions", ReplyAction="http://tempuri.org/IwcfAdmin/GetAllQuestionsResponse")]
        System.IAsyncResult BeginGetAllQuestions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> EndGetAllQuestions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/GetAllAnswers", ReplyAction="http://tempuri.org/IwcfAdmin/GetAllAnswersResponse")]
        System.IAsyncResult BeginGetAllAnswers(int aid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> EndGetAllAnswers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/SaveQuestion", ReplyAction="http://tempuri.org/IwcfAdmin/SaveQuestionResponse")]
        System.IAsyncResult BeginSaveQuestion(MemoriesEdge.AdminService.ManageFeedBack objF, System.AsyncCallback callback, object asyncState);
        
        int EndSaveQuestion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/UpdateQuestion", ReplyAction="http://tempuri.org/IwcfAdmin/UpdateQuestionResponse")]
        System.IAsyncResult BeginUpdateQuestion(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState);
        
        int EndUpdateQuestion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/ShowQuestionStatus", ReplyAction="http://tempuri.org/IwcfAdmin/ShowQuestionStatusResponse")]
        System.IAsyncResult BeginShowQuestionStatus(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState);
        
        MemoriesEdge.AdminService.ManageFeedBack EndShowQuestionStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/DispalyQues", ReplyAction="http://tempuri.org/IwcfAdmin/DispalyQuesResponse")]
        System.IAsyncResult BeginDispalyQues(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState);
        
        MemoriesEdge.AdminService.ManageFeedBack EndDispalyQues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IwcfAdmin/ShowAnswerStatus", ReplyAction="http://tempuri.org/IwcfAdmin/ShowAnswerStatusResponse")]
        System.IAsyncResult BeginShowAnswerStatus(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState);
        
        MemoriesEdge.AdminService.ManageFeedBack EndShowAnswerStatus(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IwcfAdminChannel : MemoriesEdge.AdminService.IwcfAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ViewFeedBack> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ViewFeedBack>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayAllUserDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplayAllUserDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageRegisteredUsers> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageRegisteredUsers>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplaySpecificUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplaySpecificUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MemoriesEdge.AdminService.ManageRegisteredUsers Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MemoriesEdge.AdminService.ManageRegisteredUsers)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSecurityQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSecurityQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.Question> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.Question>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUserAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUserAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MemoriesEdge.AdminService.AddEditOperator Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MemoriesEdge.AdminService.AddEditOperator)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MemoriesEdge.AdminService.UserLoginRegisterUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MemoriesEdge.AdminService.UserLoginRegisterUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MemoriesEdge.AdminService.ForgotPassword Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MemoriesEdge.AdminService.ForgotPassword)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowQuestionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShowQuestionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MemoriesEdge.AdminService.ManageFeedBack Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MemoriesEdge.AdminService.ManageFeedBack)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DispalyQuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DispalyQuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MemoriesEdge.AdminService.ManageFeedBack Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MemoriesEdge.AdminService.ManageFeedBack)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowAnswerStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ShowAnswerStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MemoriesEdge.AdminService.ManageFeedBack Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MemoriesEdge.AdminService.ManageFeedBack)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IwcfAdminClient : System.ServiceModel.ClientBase<MemoriesEdge.AdminService.IwcfAdmin>, MemoriesEdge.AdminService.IwcfAdmin {
        
        private BeginOperationDelegate onBeginSaveAnswersDelegate;
        
        private EndOperationDelegate onEndSaveAnswersDelegate;
        
        private System.Threading.SendOrPostCallback onSaveAnswersCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAnswersDelegate;
        
        private EndOperationDelegate onEndUpdateAnswersDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAnswersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersFeedbackDelegate;
        
        private EndOperationDelegate onEndGetUsersFeedbackDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersFeedbackCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersDelegate;
        
        private EndOperationDelegate onEndGetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeStatusDelegate;
        
        private EndOperationDelegate onEndChangeStatusDelegate;
        
        private System.Threading.SendOrPostCallback onChangeStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisplayAllUserDetailDelegate;
        
        private EndOperationDelegate onEndDisplayAllUserDetailDelegate;
        
        private System.Threading.SendOrPostCallback onDisplayAllUserDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisplaySpecificUserDelegate;
        
        private EndOperationDelegate onEndDisplaySpecificUserDelegate;
        
        private System.Threading.SendOrPostCallback onDisplaySpecificUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSecurityQuestionsDelegate;
        
        private EndOperationDelegate onEndGetSecurityQuestionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSecurityQuestionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCountryDelegate;
        
        private EndOperationDelegate onEndGetCountryDelegate;
        
        private System.Threading.SendOrPostCallback onGetCountryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStateDelegate;
        
        private EndOperationDelegate onEndGetStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCityDelegate;
        
        private EndOperationDelegate onEndGetCityDelegate;
        
        private System.Threading.SendOrPostCallback onGetCityCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckAvailabilityDelegate;
        
        private EndOperationDelegate onEndCheckAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onCheckAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertNewUserDelegate;
        
        private EndOperationDelegate onEndInsertNewUserDelegate;
        
        private System.Threading.SendOrPostCallback onInsertNewUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCountryDelegate;
        
        private EndOperationDelegate onEndGetAllCountryDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCountryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllStateDelegate;
        
        private EndOperationDelegate onEndGetAllStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCityDelegate;
        
        private EndOperationDelegate onEndGetAllCityDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCityCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUserAvailabilityDelegate;
        
        private EndOperationDelegate onEndCheckUserAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onCheckUserAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewUserDelegate;
        
        private EndOperationDelegate onEndAddNewUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDetailDelegate;
        
        private EndOperationDelegate onEndGetDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginUserDelegate;
        
        private EndOperationDelegate onEndLoginUserDelegate;
        
        private System.Threading.SendOrPostCallback onLoginUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPasswordDelegate;
        
        private EndOperationDelegate onEndGetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onGetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserPasswordDelegate;
        
        private EndOperationDelegate onEndGetUserPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePasswordDelegate;
        
        private EndOperationDelegate onEndUpdatePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllQuestionsDelegate;
        
        private EndOperationDelegate onEndGetAllQuestionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllQuestionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAnswersDelegate;
        
        private EndOperationDelegate onEndGetAllAnswersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAnswersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveQuestionDelegate;
        
        private EndOperationDelegate onEndSaveQuestionDelegate;
        
        private System.Threading.SendOrPostCallback onSaveQuestionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateQuestionDelegate;
        
        private EndOperationDelegate onEndUpdateQuestionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateQuestionCompletedDelegate;
        
        private BeginOperationDelegate onBeginShowQuestionStatusDelegate;
        
        private EndOperationDelegate onEndShowQuestionStatusDelegate;
        
        private System.Threading.SendOrPostCallback onShowQuestionStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginDispalyQuesDelegate;
        
        private EndOperationDelegate onEndDispalyQuesDelegate;
        
        private System.Threading.SendOrPostCallback onDispalyQuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginShowAnswerStatusDelegate;
        
        private EndOperationDelegate onEndShowAnswerStatusDelegate;
        
        private System.Threading.SendOrPostCallback onShowAnswerStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public IwcfAdminClient() {
        }
        
        public IwcfAdminClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IwcfAdminClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IwcfAdminClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IwcfAdminClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SaveAnswersCompletedEventArgs> SaveAnswersCompleted;
        
        public event System.EventHandler<UpdateAnswersCompletedEventArgs> UpdateAnswersCompleted;
        
        public event System.EventHandler<GetUsersFeedbackCompletedEventArgs> GetUsersFeedbackCompleted;
        
        public event System.EventHandler<GetAllUsersCompletedEventArgs> GetAllUsersCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<ChangeStatusCompletedEventArgs> ChangeStatusCompleted;
        
        public event System.EventHandler<DisplayAllUserDetailCompletedEventArgs> DisplayAllUserDetailCompleted;
        
        public event System.EventHandler<DisplaySpecificUserCompletedEventArgs> DisplaySpecificUserCompleted;
        
        public event System.EventHandler<GetSecurityQuestionsCompletedEventArgs> GetSecurityQuestionsCompleted;
        
        public event System.EventHandler<GetCountryCompletedEventArgs> GetCountryCompleted;
        
        public event System.EventHandler<GetStateCompletedEventArgs> GetStateCompleted;
        
        public event System.EventHandler<GetCityCompletedEventArgs> GetCityCompleted;
        
        public event System.EventHandler<CheckAvailabilityCompletedEventArgs> CheckAvailabilityCompleted;
        
        public event System.EventHandler<InsertNewUserCompletedEventArgs> InsertNewUserCompleted;
        
        public event System.EventHandler<GetAllCountryCompletedEventArgs> GetAllCountryCompleted;
        
        public event System.EventHandler<GetAllStateCompletedEventArgs> GetAllStateCompleted;
        
        public event System.EventHandler<GetAllCityCompletedEventArgs> GetAllCityCompleted;
        
        public event System.EventHandler<CheckUserAvailabilityCompletedEventArgs> CheckUserAvailabilityCompleted;
        
        public event System.EventHandler<AddNewUserCompletedEventArgs> AddNewUserCompleted;
        
        public event System.EventHandler<GetDetailCompletedEventArgs> GetDetailCompleted;
        
        public event System.EventHandler<LoginUserCompletedEventArgs> LoginUserCompleted;
        
        public event System.EventHandler<GetPasswordCompletedEventArgs> GetPasswordCompleted;
        
        public event System.EventHandler<GetUserPasswordCompletedEventArgs> GetUserPasswordCompleted;
        
        public event System.EventHandler<UpdatePasswordCompletedEventArgs> UpdatePasswordCompleted;
        
        public event System.EventHandler<GetAllQuestionsCompletedEventArgs> GetAllQuestionsCompleted;
        
        public event System.EventHandler<GetAllAnswersCompletedEventArgs> GetAllAnswersCompleted;
        
        public event System.EventHandler<SaveQuestionCompletedEventArgs> SaveQuestionCompleted;
        
        public event System.EventHandler<UpdateQuestionCompletedEventArgs> UpdateQuestionCompleted;
        
        public event System.EventHandler<ShowQuestionStatusCompletedEventArgs> ShowQuestionStatusCompleted;
        
        public event System.EventHandler<DispalyQuesCompletedEventArgs> DispalyQuesCompleted;
        
        public event System.EventHandler<ShowAnswerStatusCompletedEventArgs> ShowAnswerStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginSaveAnswers(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveAnswers(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndSaveAnswers(System.IAsyncResult result) {
            return base.Channel.EndSaveAnswers(result);
        }
        
        private System.IAsyncResult OnBeginSaveAnswers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.ManageFeedBack entity = ((MemoriesEdge.AdminService.ManageFeedBack)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginSaveAnswers(entity, callback, asyncState);
        }
        
        private object[] OnEndSaveAnswers(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndSaveAnswers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveAnswersCompleted(object state) {
            if ((this.SaveAnswersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveAnswersCompleted(this, new SaveAnswersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAnswersAsync(MemoriesEdge.AdminService.ManageFeedBack entity) {
            this.SaveAnswersAsync(entity, null);
        }
        
        public void SaveAnswersAsync(MemoriesEdge.AdminService.ManageFeedBack entity, object userState) {
            if ((this.onBeginSaveAnswersDelegate == null)) {
                this.onBeginSaveAnswersDelegate = new BeginOperationDelegate(this.OnBeginSaveAnswers);
            }
            if ((this.onEndSaveAnswersDelegate == null)) {
                this.onEndSaveAnswersDelegate = new EndOperationDelegate(this.OnEndSaveAnswers);
            }
            if ((this.onSaveAnswersCompletedDelegate == null)) {
                this.onSaveAnswersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveAnswersCompleted);
            }
            base.InvokeAsync(this.onBeginSaveAnswersDelegate, new object[] {
                        entity}, this.onEndSaveAnswersDelegate, this.onSaveAnswersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginUpdateAnswers(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAnswers(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndUpdateAnswers(System.IAsyncResult result) {
            return base.Channel.EndUpdateAnswers(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAnswers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.ManageFeedBack entity = ((MemoriesEdge.AdminService.ManageFeedBack)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginUpdateAnswers(entity, callback, asyncState);
        }
        
        private object[] OnEndUpdateAnswers(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndUpdateAnswers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateAnswersCompleted(object state) {
            if ((this.UpdateAnswersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAnswersCompleted(this, new UpdateAnswersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAnswersAsync(MemoriesEdge.AdminService.ManageFeedBack entity) {
            this.UpdateAnswersAsync(entity, null);
        }
        
        public void UpdateAnswersAsync(MemoriesEdge.AdminService.ManageFeedBack entity, object userState) {
            if ((this.onBeginUpdateAnswersDelegate == null)) {
                this.onBeginUpdateAnswersDelegate = new BeginOperationDelegate(this.OnBeginUpdateAnswers);
            }
            if ((this.onEndUpdateAnswersDelegate == null)) {
                this.onEndUpdateAnswersDelegate = new EndOperationDelegate(this.OnEndUpdateAnswers);
            }
            if ((this.onUpdateAnswersCompletedDelegate == null)) {
                this.onUpdateAnswersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAnswersCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAnswersDelegate, new object[] {
                        entity}, this.onEndUpdateAnswersDelegate, this.onUpdateAnswersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetUsersFeedback(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersFeedback(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ViewFeedBack> MemoriesEdge.AdminService.IwcfAdmin.EndGetUsersFeedback(System.IAsyncResult result) {
            return base.Channel.EndGetUsersFeedback(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersFeedback(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetUsersFeedback(callback, asyncState);
        }
        
        private object[] OnEndGetUsersFeedback(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ViewFeedBack> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetUsersFeedback(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersFeedbackCompleted(object state) {
            if ((this.GetUsersFeedbackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersFeedbackCompleted(this, new GetUsersFeedbackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersFeedbackAsync() {
            this.GetUsersFeedbackAsync(null);
        }
        
        public void GetUsersFeedbackAsync(object userState) {
            if ((this.onBeginGetUsersFeedbackDelegate == null)) {
                this.onBeginGetUsersFeedbackDelegate = new BeginOperationDelegate(this.OnBeginGetUsersFeedback);
            }
            if ((this.onEndGetUsersFeedbackDelegate == null)) {
                this.onEndGetUsersFeedbackDelegate = new EndOperationDelegate(this.OnEndGetUsersFeedback);
            }
            if ((this.onGetUsersFeedbackCompletedDelegate == null)) {
                this.onGetUsersFeedbackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersFeedbackCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersFeedbackDelegate, null, this.onEndGetUsersFeedbackDelegate, this.onGetUsersFeedbackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> MemoriesEdge.AdminService.IwcfAdmin.EndGetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetAllUsers(callback, asyncState);
        }
        
        private object[] OnEndGetAllUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersCompleted(object state) {
            if ((this.GetAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        public void GetAllUsersAsync(object userState) {
            if ((this.onBeginGetAllUsersDelegate == null)) {
                this.onBeginGetAllUsersDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsers);
            }
            if ((this.onEndGetAllUsersDelegate == null)) {
                this.onEndGetAllUsersDelegate = new EndOperationDelegate(this.OnEndGetAllUsers);
            }
            if ((this.onGetAllUsersCompletedDelegate == null)) {
                this.onGetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersDelegate, null, this.onEndGetAllUsersDelegate, this.onGetAllUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetUser(string UserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(UserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> MemoriesEdge.AdminService.IwcfAdmin.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetUser(UserName, callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync(string UserName) {
            this.GetUserAsync(UserName, null);
        }
        
        public void GetUserAsync(string UserName, object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, new object[] {
                        UserName}, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginChangeStatus(int UserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeStatus(UserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndChangeStatus(System.IAsyncResult result) {
            return base.Channel.EndChangeStatus(result);
        }
        
        private System.IAsyncResult OnBeginChangeStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserId = ((int)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginChangeStatus(UserId, callback, asyncState);
        }
        
        private object[] OnEndChangeStatus(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndChangeStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeStatusCompleted(object state) {
            if ((this.ChangeStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeStatusCompleted(this, new ChangeStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeStatusAsync(int UserId) {
            this.ChangeStatusAsync(UserId, null);
        }
        
        public void ChangeStatusAsync(int UserId, object userState) {
            if ((this.onBeginChangeStatusDelegate == null)) {
                this.onBeginChangeStatusDelegate = new BeginOperationDelegate(this.OnBeginChangeStatus);
            }
            if ((this.onEndChangeStatusDelegate == null)) {
                this.onEndChangeStatusDelegate = new EndOperationDelegate(this.OnEndChangeStatus);
            }
            if ((this.onChangeStatusCompletedDelegate == null)) {
                this.onChangeStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeStatusCompleted);
            }
            base.InvokeAsync(this.onBeginChangeStatusDelegate, new object[] {
                        UserId}, this.onEndChangeStatusDelegate, this.onChangeStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginDisplayAllUserDetail(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplayAllUserDetail(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageRegisteredUsers> MemoriesEdge.AdminService.IwcfAdmin.EndDisplayAllUserDetail(System.IAsyncResult result) {
            return base.Channel.EndDisplayAllUserDetail(result);
        }
        
        private System.IAsyncResult OnBeginDisplayAllUserDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginDisplayAllUserDetail(callback, asyncState);
        }
        
        private object[] OnEndDisplayAllUserDetail(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageRegisteredUsers> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndDisplayAllUserDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplayAllUserDetailCompleted(object state) {
            if ((this.DisplayAllUserDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplayAllUserDetailCompleted(this, new DisplayAllUserDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplayAllUserDetailAsync() {
            this.DisplayAllUserDetailAsync(null);
        }
        
        public void DisplayAllUserDetailAsync(object userState) {
            if ((this.onBeginDisplayAllUserDetailDelegate == null)) {
                this.onBeginDisplayAllUserDetailDelegate = new BeginOperationDelegate(this.OnBeginDisplayAllUserDetail);
            }
            if ((this.onEndDisplayAllUserDetailDelegate == null)) {
                this.onEndDisplayAllUserDetailDelegate = new EndOperationDelegate(this.OnEndDisplayAllUserDetail);
            }
            if ((this.onDisplayAllUserDetailCompletedDelegate == null)) {
                this.onDisplayAllUserDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplayAllUserDetailCompleted);
            }
            base.InvokeAsync(this.onBeginDisplayAllUserDetailDelegate, null, this.onEndDisplayAllUserDetailDelegate, this.onDisplayAllUserDetailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginDisplaySpecificUser(MemoriesEdge.AdminService.ManageRegisteredUsers manage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplaySpecificUser(manage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemoriesEdge.AdminService.ManageRegisteredUsers MemoriesEdge.AdminService.IwcfAdmin.EndDisplaySpecificUser(System.IAsyncResult result) {
            return base.Channel.EndDisplaySpecificUser(result);
        }
        
        private System.IAsyncResult OnBeginDisplaySpecificUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.ManageRegisteredUsers manage = ((MemoriesEdge.AdminService.ManageRegisteredUsers)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginDisplaySpecificUser(manage, callback, asyncState);
        }
        
        private object[] OnEndDisplaySpecificUser(System.IAsyncResult result) {
            MemoriesEdge.AdminService.ManageRegisteredUsers retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndDisplaySpecificUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplaySpecificUserCompleted(object state) {
            if ((this.DisplaySpecificUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplaySpecificUserCompleted(this, new DisplaySpecificUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplaySpecificUserAsync(MemoriesEdge.AdminService.ManageRegisteredUsers manage) {
            this.DisplaySpecificUserAsync(manage, null);
        }
        
        public void DisplaySpecificUserAsync(MemoriesEdge.AdminService.ManageRegisteredUsers manage, object userState) {
            if ((this.onBeginDisplaySpecificUserDelegate == null)) {
                this.onBeginDisplaySpecificUserDelegate = new BeginOperationDelegate(this.OnBeginDisplaySpecificUser);
            }
            if ((this.onEndDisplaySpecificUserDelegate == null)) {
                this.onEndDisplaySpecificUserDelegate = new EndOperationDelegate(this.OnEndDisplaySpecificUser);
            }
            if ((this.onDisplaySpecificUserCompletedDelegate == null)) {
                this.onDisplaySpecificUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplaySpecificUserCompleted);
            }
            base.InvokeAsync(this.onBeginDisplaySpecificUserDelegate, new object[] {
                        manage}, this.onEndDisplaySpecificUserDelegate, this.onDisplaySpecificUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetSecurityQuestions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSecurityQuestions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.Question> MemoriesEdge.AdminService.IwcfAdmin.EndGetSecurityQuestions(System.IAsyncResult result) {
            return base.Channel.EndGetSecurityQuestions(result);
        }
        
        private System.IAsyncResult OnBeginGetSecurityQuestions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetSecurityQuestions(callback, asyncState);
        }
        
        private object[] OnEndGetSecurityQuestions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.Question> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetSecurityQuestions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSecurityQuestionsCompleted(object state) {
            if ((this.GetSecurityQuestionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSecurityQuestionsCompleted(this, new GetSecurityQuestionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSecurityQuestionsAsync() {
            this.GetSecurityQuestionsAsync(null);
        }
        
        public void GetSecurityQuestionsAsync(object userState) {
            if ((this.onBeginGetSecurityQuestionsDelegate == null)) {
                this.onBeginGetSecurityQuestionsDelegate = new BeginOperationDelegate(this.OnBeginGetSecurityQuestions);
            }
            if ((this.onEndGetSecurityQuestionsDelegate == null)) {
                this.onEndGetSecurityQuestionsDelegate = new EndOperationDelegate(this.OnEndGetSecurityQuestions);
            }
            if ((this.onGetSecurityQuestionsCompletedDelegate == null)) {
                this.onGetSecurityQuestionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSecurityQuestionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSecurityQuestionsDelegate, null, this.onEndGetSecurityQuestionsDelegate, this.onGetSecurityQuestionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetCountry(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCountry(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> MemoriesEdge.AdminService.IwcfAdmin.EndGetCountry(System.IAsyncResult result) {
            return base.Channel.EndGetCountry(result);
        }
        
        private System.IAsyncResult OnBeginGetCountry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetCountry(callback, asyncState);
        }
        
        private object[] OnEndGetCountry(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetCountry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCountryCompleted(object state) {
            if ((this.GetCountryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountryCompleted(this, new GetCountryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCountryAsync() {
            this.GetCountryAsync(null);
        }
        
        public void GetCountryAsync(object userState) {
            if ((this.onBeginGetCountryDelegate == null)) {
                this.onBeginGetCountryDelegate = new BeginOperationDelegate(this.OnBeginGetCountry);
            }
            if ((this.onEndGetCountryDelegate == null)) {
                this.onEndGetCountryDelegate = new EndOperationDelegate(this.OnEndGetCountry);
            }
            if ((this.onGetCountryCompletedDelegate == null)) {
                this.onGetCountryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountryCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountryDelegate, null, this.onEndGetCountryDelegate, this.onGetCountryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetState(int CountryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetState(CountryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> MemoriesEdge.AdminService.IwcfAdmin.EndGetState(System.IAsyncResult result) {
            return base.Channel.EndGetState(result);
        }
        
        private System.IAsyncResult OnBeginGetState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CountryId = ((int)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetState(CountryId, callback, asyncState);
        }
        
        private object[] OnEndGetState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStateCompleted(object state) {
            if ((this.GetStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStateCompleted(this, new GetStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStateAsync(int CountryId) {
            this.GetStateAsync(CountryId, null);
        }
        
        public void GetStateAsync(int CountryId, object userState) {
            if ((this.onBeginGetStateDelegate == null)) {
                this.onBeginGetStateDelegate = new BeginOperationDelegate(this.OnBeginGetState);
            }
            if ((this.onEndGetStateDelegate == null)) {
                this.onEndGetStateDelegate = new EndOperationDelegate(this.OnEndGetState);
            }
            if ((this.onGetStateCompletedDelegate == null)) {
                this.onGetStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetStateDelegate, new object[] {
                        CountryId}, this.onEndGetStateDelegate, this.onGetStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetCity(int StateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCity(StateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> MemoriesEdge.AdminService.IwcfAdmin.EndGetCity(System.IAsyncResult result) {
            return base.Channel.EndGetCity(result);
        }
        
        private System.IAsyncResult OnBeginGetCity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int StateId = ((int)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetCity(StateId, callback, asyncState);
        }
        
        private object[] OnEndGetCity(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetCity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCityCompleted(object state) {
            if ((this.GetCityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCityCompleted(this, new GetCityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCityAsync(int StateId) {
            this.GetCityAsync(StateId, null);
        }
        
        public void GetCityAsync(int StateId, object userState) {
            if ((this.onBeginGetCityDelegate == null)) {
                this.onBeginGetCityDelegate = new BeginOperationDelegate(this.OnBeginGetCity);
            }
            if ((this.onEndGetCityDelegate == null)) {
                this.onEndGetCityDelegate = new EndOperationDelegate(this.OnEndGetCity);
            }
            if ((this.onGetCityCompletedDelegate == null)) {
                this.onGetCityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCityCompleted);
            }
            base.InvokeAsync(this.onBeginGetCityDelegate, new object[] {
                        StateId}, this.onEndGetCityDelegate, this.onGetCityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginCheckAvailability(string UserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckAvailability(UserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndCheckAvailability(System.IAsyncResult result) {
            return base.Channel.EndCheckAvailability(result);
        }
        
        private System.IAsyncResult OnBeginCheckAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginCheckAvailability(UserName, callback, asyncState);
        }
        
        private object[] OnEndCheckAvailability(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndCheckAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckAvailabilityCompleted(object state) {
            if ((this.CheckAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckAvailabilityCompleted(this, new CheckAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckAvailabilityAsync(string UserName) {
            this.CheckAvailabilityAsync(UserName, null);
        }
        
        public void CheckAvailabilityAsync(string UserName, object userState) {
            if ((this.onBeginCheckAvailabilityDelegate == null)) {
                this.onBeginCheckAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginCheckAvailability);
            }
            if ((this.onEndCheckAvailabilityDelegate == null)) {
                this.onEndCheckAvailabilityDelegate = new EndOperationDelegate(this.OnEndCheckAvailability);
            }
            if ((this.onCheckAvailabilityCompletedDelegate == null)) {
                this.onCheckAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginCheckAvailabilityDelegate, new object[] {
                        UserName}, this.onEndCheckAvailabilityDelegate, this.onCheckAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginInsertNewUser(MemoriesEdge.AdminService.NewRegisteredUser objNewUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertNewUser(objNewUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndInsertNewUser(System.IAsyncResult result) {
            return base.Channel.EndInsertNewUser(result);
        }
        
        private System.IAsyncResult OnBeginInsertNewUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.NewRegisteredUser objNewUser = ((MemoriesEdge.AdminService.NewRegisteredUser)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginInsertNewUser(objNewUser, callback, asyncState);
        }
        
        private object[] OnEndInsertNewUser(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndInsertNewUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertNewUserCompleted(object state) {
            if ((this.InsertNewUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertNewUserCompleted(this, new InsertNewUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertNewUserAsync(MemoriesEdge.AdminService.NewRegisteredUser objNewUser) {
            this.InsertNewUserAsync(objNewUser, null);
        }
        
        public void InsertNewUserAsync(MemoriesEdge.AdminService.NewRegisteredUser objNewUser, object userState) {
            if ((this.onBeginInsertNewUserDelegate == null)) {
                this.onBeginInsertNewUserDelegate = new BeginOperationDelegate(this.OnBeginInsertNewUser);
            }
            if ((this.onEndInsertNewUserDelegate == null)) {
                this.onEndInsertNewUserDelegate = new EndOperationDelegate(this.OnEndInsertNewUser);
            }
            if ((this.onInsertNewUserCompletedDelegate == null)) {
                this.onInsertNewUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertNewUserCompleted);
            }
            base.InvokeAsync(this.onBeginInsertNewUserDelegate, new object[] {
                        objNewUser}, this.onEndInsertNewUserDelegate, this.onInsertNewUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetAllCountry(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCountry(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> MemoriesEdge.AdminService.IwcfAdmin.EndGetAllCountry(System.IAsyncResult result) {
            return base.Channel.EndGetAllCountry(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCountry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetAllCountry(callback, asyncState);
        }
        
        private object[] OnEndGetAllCountry(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetAllCountry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCountryCompleted(object state) {
            if ((this.GetAllCountryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCountryCompleted(this, new GetAllCountryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCountryAsync() {
            this.GetAllCountryAsync(null);
        }
        
        public void GetAllCountryAsync(object userState) {
            if ((this.onBeginGetAllCountryDelegate == null)) {
                this.onBeginGetAllCountryDelegate = new BeginOperationDelegate(this.OnBeginGetAllCountry);
            }
            if ((this.onEndGetAllCountryDelegate == null)) {
                this.onEndGetAllCountryDelegate = new EndOperationDelegate(this.OnEndGetAllCountry);
            }
            if ((this.onGetAllCountryCompletedDelegate == null)) {
                this.onGetAllCountryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCountryCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCountryDelegate, null, this.onEndGetAllCountryDelegate, this.onGetAllCountryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetAllState(int CountryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllState(CountryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> MemoriesEdge.AdminService.IwcfAdmin.EndGetAllState(System.IAsyncResult result) {
            return base.Channel.EndGetAllState(result);
        }
        
        private System.IAsyncResult OnBeginGetAllState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CountryId = ((int)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetAllState(CountryId, callback, asyncState);
        }
        
        private object[] OnEndGetAllState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetAllState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllStateCompleted(object state) {
            if ((this.GetAllStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllStateCompleted(this, new GetAllStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllStateAsync(int CountryId) {
            this.GetAllStateAsync(CountryId, null);
        }
        
        public void GetAllStateAsync(int CountryId, object userState) {
            if ((this.onBeginGetAllStateDelegate == null)) {
                this.onBeginGetAllStateDelegate = new BeginOperationDelegate(this.OnBeginGetAllState);
            }
            if ((this.onEndGetAllStateDelegate == null)) {
                this.onEndGetAllStateDelegate = new EndOperationDelegate(this.OnEndGetAllState);
            }
            if ((this.onGetAllStateCompletedDelegate == null)) {
                this.onGetAllStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllStateDelegate, new object[] {
                        CountryId}, this.onEndGetAllStateDelegate, this.onGetAllStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetAllCity(int StateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCity(StateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> MemoriesEdge.AdminService.IwcfAdmin.EndGetAllCity(System.IAsyncResult result) {
            return base.Channel.EndGetAllCity(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int StateId = ((int)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetAllCity(StateId, callback, asyncState);
        }
        
        private object[] OnEndGetAllCity(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetAllCity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCityCompleted(object state) {
            if ((this.GetAllCityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCityCompleted(this, new GetAllCityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCityAsync(int StateId) {
            this.GetAllCityAsync(StateId, null);
        }
        
        public void GetAllCityAsync(int StateId, object userState) {
            if ((this.onBeginGetAllCityDelegate == null)) {
                this.onBeginGetAllCityDelegate = new BeginOperationDelegate(this.OnBeginGetAllCity);
            }
            if ((this.onEndGetAllCityDelegate == null)) {
                this.onEndGetAllCityDelegate = new EndOperationDelegate(this.OnEndGetAllCity);
            }
            if ((this.onGetAllCityCompletedDelegate == null)) {
                this.onGetAllCityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCityCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCityDelegate, new object[] {
                        StateId}, this.onEndGetAllCityDelegate, this.onGetAllCityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginCheckUserAvailability(string UserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUserAvailability(UserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndCheckUserAvailability(System.IAsyncResult result) {
            return base.Channel.EndCheckUserAvailability(result);
        }
        
        private System.IAsyncResult OnBeginCheckUserAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginCheckUserAvailability(UserName, callback, asyncState);
        }
        
        private object[] OnEndCheckUserAvailability(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndCheckUserAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUserAvailabilityCompleted(object state) {
            if ((this.CheckUserAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUserAvailabilityCompleted(this, new CheckUserAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUserAvailabilityAsync(string UserName) {
            this.CheckUserAvailabilityAsync(UserName, null);
        }
        
        public void CheckUserAvailabilityAsync(string UserName, object userState) {
            if ((this.onBeginCheckUserAvailabilityDelegate == null)) {
                this.onBeginCheckUserAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginCheckUserAvailability);
            }
            if ((this.onEndCheckUserAvailabilityDelegate == null)) {
                this.onEndCheckUserAvailabilityDelegate = new EndOperationDelegate(this.OnEndCheckUserAvailability);
            }
            if ((this.onCheckUserAvailabilityCompletedDelegate == null)) {
                this.onCheckUserAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUserAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginCheckUserAvailabilityDelegate, new object[] {
                        UserName}, this.onEndCheckUserAvailabilityDelegate, this.onCheckUserAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginAddNewUser(MemoriesEdge.AdminService.AddEditOperator objNewUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewUser(objNewUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndAddNewUser(System.IAsyncResult result) {
            return base.Channel.EndAddNewUser(result);
        }
        
        private System.IAsyncResult OnBeginAddNewUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.AddEditOperator objNewUser = ((MemoriesEdge.AdminService.AddEditOperator)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginAddNewUser(objNewUser, callback, asyncState);
        }
        
        private object[] OnEndAddNewUser(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndAddNewUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewUserCompleted(object state) {
            if ((this.AddNewUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewUserCompleted(this, new AddNewUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewUserAsync(MemoriesEdge.AdminService.AddEditOperator objNewUser) {
            this.AddNewUserAsync(objNewUser, null);
        }
        
        public void AddNewUserAsync(MemoriesEdge.AdminService.AddEditOperator objNewUser, object userState) {
            if ((this.onBeginAddNewUserDelegate == null)) {
                this.onBeginAddNewUserDelegate = new BeginOperationDelegate(this.OnBeginAddNewUser);
            }
            if ((this.onEndAddNewUserDelegate == null)) {
                this.onEndAddNewUserDelegate = new EndOperationDelegate(this.OnEndAddNewUser);
            }
            if ((this.onAddNewUserCompletedDelegate == null)) {
                this.onAddNewUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewUserDelegate, new object[] {
                        objNewUser}, this.onEndAddNewUserDelegate, this.onAddNewUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetDetail(MemoriesEdge.AdminService.AddEditOperator entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDetail(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemoriesEdge.AdminService.AddEditOperator MemoriesEdge.AdminService.IwcfAdmin.EndGetDetail(System.IAsyncResult result) {
            return base.Channel.EndGetDetail(result);
        }
        
        private System.IAsyncResult OnBeginGetDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.AddEditOperator entity = ((MemoriesEdge.AdminService.AddEditOperator)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetDetail(entity, callback, asyncState);
        }
        
        private object[] OnEndGetDetail(System.IAsyncResult result) {
            MemoriesEdge.AdminService.AddEditOperator retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetDetail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDetailCompleted(object state) {
            if ((this.GetDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDetailCompleted(this, new GetDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDetailAsync(MemoriesEdge.AdminService.AddEditOperator entity) {
            this.GetDetailAsync(entity, null);
        }
        
        public void GetDetailAsync(MemoriesEdge.AdminService.AddEditOperator entity, object userState) {
            if ((this.onBeginGetDetailDelegate == null)) {
                this.onBeginGetDetailDelegate = new BeginOperationDelegate(this.OnBeginGetDetail);
            }
            if ((this.onEndGetDetailDelegate == null)) {
                this.onEndGetDetailDelegate = new EndOperationDelegate(this.OnEndGetDetail);
            }
            if ((this.onGetDetailCompletedDelegate == null)) {
                this.onGetDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetDetailDelegate, new object[] {
                        entity}, this.onEndGetDetailDelegate, this.onGetDetailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginLoginUser(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginUser(UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemoriesEdge.AdminService.UserLoginRegisterUser MemoriesEdge.AdminService.IwcfAdmin.EndLoginUser(System.IAsyncResult result) {
            return base.Channel.EndLoginUser(result);
        }
        
        private System.IAsyncResult OnBeginLoginUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Password = ((string)(inValues[1]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginLoginUser(UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndLoginUser(System.IAsyncResult result) {
            MemoriesEdge.AdminService.UserLoginRegisterUser retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndLoginUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginUserCompleted(object state) {
            if ((this.LoginUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginUserAsync(string UserName, string Password) {
            this.LoginUserAsync(UserName, Password, null);
        }
        
        public void LoginUserAsync(string UserName, string Password, object userState) {
            if ((this.onBeginLoginUserDelegate == null)) {
                this.onBeginLoginUserDelegate = new BeginOperationDelegate(this.OnBeginLoginUser);
            }
            if ((this.onEndLoginUserDelegate == null)) {
                this.onEndLoginUserDelegate = new EndOperationDelegate(this.OnEndLoginUser);
            }
            if ((this.onLoginUserCompletedDelegate == null)) {
                this.onLoginUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginUserCompleted);
            }
            base.InvokeAsync(this.onBeginLoginUserDelegate, new object[] {
                        UserName,
                        Password}, this.onEndLoginUserDelegate, this.onLoginUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetPassword(string UserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPassword(UserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemoriesEdge.AdminService.ForgotPassword MemoriesEdge.AdminService.IwcfAdmin.EndGetPassword(System.IAsyncResult result) {
            return base.Channel.EndGetPassword(result);
        }
        
        private System.IAsyncResult OnBeginGetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetPassword(UserName, callback, asyncState);
        }
        
        private object[] OnEndGetPassword(System.IAsyncResult result) {
            MemoriesEdge.AdminService.ForgotPassword retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPasswordCompleted(object state) {
            if ((this.GetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPasswordCompleted(this, new GetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPasswordAsync(string UserName) {
            this.GetPasswordAsync(UserName, null);
        }
        
        public void GetPasswordAsync(string UserName, object userState) {
            if ((this.onBeginGetPasswordDelegate == null)) {
                this.onBeginGetPasswordDelegate = new BeginOperationDelegate(this.OnBeginGetPassword);
            }
            if ((this.onEndGetPasswordDelegate == null)) {
                this.onEndGetPasswordDelegate = new EndOperationDelegate(this.OnEndGetPassword);
            }
            if ((this.onGetPasswordCompletedDelegate == null)) {
                this.onGetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginGetPasswordDelegate, new object[] {
                        UserName}, this.onEndGetPasswordDelegate, this.onGetPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetUserPassword(int UserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserPassword(UserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MemoriesEdge.AdminService.IwcfAdmin.EndGetUserPassword(System.IAsyncResult result) {
            return base.Channel.EndGetUserPassword(result);
        }
        
        private System.IAsyncResult OnBeginGetUserPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserId = ((int)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetUserPassword(UserId, callback, asyncState);
        }
        
        private object[] OnEndGetUserPassword(System.IAsyncResult result) {
            string retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetUserPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserPasswordCompleted(object state) {
            if ((this.GetUserPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserPasswordCompleted(this, new GetUserPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserPasswordAsync(int UserId) {
            this.GetUserPasswordAsync(UserId, null);
        }
        
        public void GetUserPasswordAsync(int UserId, object userState) {
            if ((this.onBeginGetUserPasswordDelegate == null)) {
                this.onBeginGetUserPasswordDelegate = new BeginOperationDelegate(this.OnBeginGetUserPassword);
            }
            if ((this.onEndGetUserPasswordDelegate == null)) {
                this.onEndGetUserPasswordDelegate = new EndOperationDelegate(this.OnEndGetUserPassword);
            }
            if ((this.onGetUserPasswordCompletedDelegate == null)) {
                this.onGetUserPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserPasswordDelegate, new object[] {
                        UserId}, this.onEndGetUserPasswordDelegate, this.onGetUserPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginUpdatePassword(int UserId, string NewPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePassword(UserId, NewPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndUpdatePassword(System.IAsyncResult result) {
            return base.Channel.EndUpdatePassword(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserId = ((int)(inValues[0]));
            string NewPassword = ((string)(inValues[1]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginUpdatePassword(UserId, NewPassword, callback, asyncState);
        }
        
        private object[] OnEndUpdatePassword(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndUpdatePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePasswordCompleted(object state) {
            if ((this.UpdatePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePasswordAsync(int UserId, string NewPassword) {
            this.UpdatePasswordAsync(UserId, NewPassword, null);
        }
        
        public void UpdatePasswordAsync(int UserId, string NewPassword, object userState) {
            if ((this.onBeginUpdatePasswordDelegate == null)) {
                this.onBeginUpdatePasswordDelegate = new BeginOperationDelegate(this.OnBeginUpdatePassword);
            }
            if ((this.onEndUpdatePasswordDelegate == null)) {
                this.onEndUpdatePasswordDelegate = new EndOperationDelegate(this.OnEndUpdatePassword);
            }
            if ((this.onUpdatePasswordCompletedDelegate == null)) {
                this.onUpdatePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePasswordDelegate, new object[] {
                        UserId,
                        NewPassword}, this.onEndUpdatePasswordDelegate, this.onUpdatePasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetAllQuestions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllQuestions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> MemoriesEdge.AdminService.IwcfAdmin.EndGetAllQuestions(System.IAsyncResult result) {
            return base.Channel.EndGetAllQuestions(result);
        }
        
        private System.IAsyncResult OnBeginGetAllQuestions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetAllQuestions(callback, asyncState);
        }
        
        private object[] OnEndGetAllQuestions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetAllQuestions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllQuestionsCompleted(object state) {
            if ((this.GetAllQuestionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllQuestionsCompleted(this, new GetAllQuestionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllQuestionsAsync() {
            this.GetAllQuestionsAsync(null);
        }
        
        public void GetAllQuestionsAsync(object userState) {
            if ((this.onBeginGetAllQuestionsDelegate == null)) {
                this.onBeginGetAllQuestionsDelegate = new BeginOperationDelegate(this.OnBeginGetAllQuestions);
            }
            if ((this.onEndGetAllQuestionsDelegate == null)) {
                this.onEndGetAllQuestionsDelegate = new EndOperationDelegate(this.OnEndGetAllQuestions);
            }
            if ((this.onGetAllQuestionsCompletedDelegate == null)) {
                this.onGetAllQuestionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllQuestionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllQuestionsDelegate, null, this.onEndGetAllQuestionsDelegate, this.onGetAllQuestionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginGetAllAnswers(int aid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAnswers(aid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> MemoriesEdge.AdminService.IwcfAdmin.EndGetAllAnswers(System.IAsyncResult result) {
            return base.Channel.EndGetAllAnswers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAnswers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int aid = ((int)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginGetAllAnswers(aid, callback, asyncState);
        }
        
        private object[] OnEndGetAllAnswers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndGetAllAnswers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAnswersCompleted(object state) {
            if ((this.GetAllAnswersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAnswersCompleted(this, new GetAllAnswersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAnswersAsync(int aid) {
            this.GetAllAnswersAsync(aid, null);
        }
        
        public void GetAllAnswersAsync(int aid, object userState) {
            if ((this.onBeginGetAllAnswersDelegate == null)) {
                this.onBeginGetAllAnswersDelegate = new BeginOperationDelegate(this.OnBeginGetAllAnswers);
            }
            if ((this.onEndGetAllAnswersDelegate == null)) {
                this.onEndGetAllAnswersDelegate = new EndOperationDelegate(this.OnEndGetAllAnswers);
            }
            if ((this.onGetAllAnswersCompletedDelegate == null)) {
                this.onGetAllAnswersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAnswersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAnswersDelegate, new object[] {
                        aid}, this.onEndGetAllAnswersDelegate, this.onGetAllAnswersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginSaveQuestion(MemoriesEdge.AdminService.ManageFeedBack objF, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveQuestion(objF, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndSaveQuestion(System.IAsyncResult result) {
            return base.Channel.EndSaveQuestion(result);
        }
        
        private System.IAsyncResult OnBeginSaveQuestion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.ManageFeedBack objF = ((MemoriesEdge.AdminService.ManageFeedBack)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginSaveQuestion(objF, callback, asyncState);
        }
        
        private object[] OnEndSaveQuestion(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndSaveQuestion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveQuestionCompleted(object state) {
            if ((this.SaveQuestionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveQuestionCompleted(this, new SaveQuestionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveQuestionAsync(MemoriesEdge.AdminService.ManageFeedBack objF) {
            this.SaveQuestionAsync(objF, null);
        }
        
        public void SaveQuestionAsync(MemoriesEdge.AdminService.ManageFeedBack objF, object userState) {
            if ((this.onBeginSaveQuestionDelegate == null)) {
                this.onBeginSaveQuestionDelegate = new BeginOperationDelegate(this.OnBeginSaveQuestion);
            }
            if ((this.onEndSaveQuestionDelegate == null)) {
                this.onEndSaveQuestionDelegate = new EndOperationDelegate(this.OnEndSaveQuestion);
            }
            if ((this.onSaveQuestionCompletedDelegate == null)) {
                this.onSaveQuestionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveQuestionCompleted);
            }
            base.InvokeAsync(this.onBeginSaveQuestionDelegate, new object[] {
                        objF}, this.onEndSaveQuestionDelegate, this.onSaveQuestionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginUpdateQuestion(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateQuestion(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MemoriesEdge.AdminService.IwcfAdmin.EndUpdateQuestion(System.IAsyncResult result) {
            return base.Channel.EndUpdateQuestion(result);
        }
        
        private System.IAsyncResult OnBeginUpdateQuestion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.ManageFeedBack entity = ((MemoriesEdge.AdminService.ManageFeedBack)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginUpdateQuestion(entity, callback, asyncState);
        }
        
        private object[] OnEndUpdateQuestion(System.IAsyncResult result) {
            int retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndUpdateQuestion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateQuestionCompleted(object state) {
            if ((this.UpdateQuestionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateQuestionCompleted(this, new UpdateQuestionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateQuestionAsync(MemoriesEdge.AdminService.ManageFeedBack entity) {
            this.UpdateQuestionAsync(entity, null);
        }
        
        public void UpdateQuestionAsync(MemoriesEdge.AdminService.ManageFeedBack entity, object userState) {
            if ((this.onBeginUpdateQuestionDelegate == null)) {
                this.onBeginUpdateQuestionDelegate = new BeginOperationDelegate(this.OnBeginUpdateQuestion);
            }
            if ((this.onEndUpdateQuestionDelegate == null)) {
                this.onEndUpdateQuestionDelegate = new EndOperationDelegate(this.OnEndUpdateQuestion);
            }
            if ((this.onUpdateQuestionCompletedDelegate == null)) {
                this.onUpdateQuestionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateQuestionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateQuestionDelegate, new object[] {
                        entity}, this.onEndUpdateQuestionDelegate, this.onUpdateQuestionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginShowQuestionStatus(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShowQuestionStatus(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemoriesEdge.AdminService.ManageFeedBack MemoriesEdge.AdminService.IwcfAdmin.EndShowQuestionStatus(System.IAsyncResult result) {
            return base.Channel.EndShowQuestionStatus(result);
        }
        
        private System.IAsyncResult OnBeginShowQuestionStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.ManageFeedBack entity = ((MemoriesEdge.AdminService.ManageFeedBack)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginShowQuestionStatus(entity, callback, asyncState);
        }
        
        private object[] OnEndShowQuestionStatus(System.IAsyncResult result) {
            MemoriesEdge.AdminService.ManageFeedBack retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndShowQuestionStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShowQuestionStatusCompleted(object state) {
            if ((this.ShowQuestionStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShowQuestionStatusCompleted(this, new ShowQuestionStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShowQuestionStatusAsync(MemoriesEdge.AdminService.ManageFeedBack entity) {
            this.ShowQuestionStatusAsync(entity, null);
        }
        
        public void ShowQuestionStatusAsync(MemoriesEdge.AdminService.ManageFeedBack entity, object userState) {
            if ((this.onBeginShowQuestionStatusDelegate == null)) {
                this.onBeginShowQuestionStatusDelegate = new BeginOperationDelegate(this.OnBeginShowQuestionStatus);
            }
            if ((this.onEndShowQuestionStatusDelegate == null)) {
                this.onEndShowQuestionStatusDelegate = new EndOperationDelegate(this.OnEndShowQuestionStatus);
            }
            if ((this.onShowQuestionStatusCompletedDelegate == null)) {
                this.onShowQuestionStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShowQuestionStatusCompleted);
            }
            base.InvokeAsync(this.onBeginShowQuestionStatusDelegate, new object[] {
                        entity}, this.onEndShowQuestionStatusDelegate, this.onShowQuestionStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginDispalyQues(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDispalyQues(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemoriesEdge.AdminService.ManageFeedBack MemoriesEdge.AdminService.IwcfAdmin.EndDispalyQues(System.IAsyncResult result) {
            return base.Channel.EndDispalyQues(result);
        }
        
        private System.IAsyncResult OnBeginDispalyQues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.ManageFeedBack entity = ((MemoriesEdge.AdminService.ManageFeedBack)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginDispalyQues(entity, callback, asyncState);
        }
        
        private object[] OnEndDispalyQues(System.IAsyncResult result) {
            MemoriesEdge.AdminService.ManageFeedBack retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndDispalyQues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDispalyQuesCompleted(object state) {
            if ((this.DispalyQuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DispalyQuesCompleted(this, new DispalyQuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DispalyQuesAsync(MemoriesEdge.AdminService.ManageFeedBack entity) {
            this.DispalyQuesAsync(entity, null);
        }
        
        public void DispalyQuesAsync(MemoriesEdge.AdminService.ManageFeedBack entity, object userState) {
            if ((this.onBeginDispalyQuesDelegate == null)) {
                this.onBeginDispalyQuesDelegate = new BeginOperationDelegate(this.OnBeginDispalyQues);
            }
            if ((this.onEndDispalyQuesDelegate == null)) {
                this.onEndDispalyQuesDelegate = new EndOperationDelegate(this.OnEndDispalyQues);
            }
            if ((this.onDispalyQuesCompletedDelegate == null)) {
                this.onDispalyQuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDispalyQuesCompleted);
            }
            base.InvokeAsync(this.onBeginDispalyQuesDelegate, new object[] {
                        entity}, this.onEndDispalyQuesDelegate, this.onDispalyQuesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MemoriesEdge.AdminService.IwcfAdmin.BeginShowAnswerStatus(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginShowAnswerStatus(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemoriesEdge.AdminService.ManageFeedBack MemoriesEdge.AdminService.IwcfAdmin.EndShowAnswerStatus(System.IAsyncResult result) {
            return base.Channel.EndShowAnswerStatus(result);
        }
        
        private System.IAsyncResult OnBeginShowAnswerStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MemoriesEdge.AdminService.ManageFeedBack entity = ((MemoriesEdge.AdminService.ManageFeedBack)(inValues[0]));
            return ((MemoriesEdge.AdminService.IwcfAdmin)(this)).BeginShowAnswerStatus(entity, callback, asyncState);
        }
        
        private object[] OnEndShowAnswerStatus(System.IAsyncResult result) {
            MemoriesEdge.AdminService.ManageFeedBack retVal = ((MemoriesEdge.AdminService.IwcfAdmin)(this)).EndShowAnswerStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnShowAnswerStatusCompleted(object state) {
            if ((this.ShowAnswerStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ShowAnswerStatusCompleted(this, new ShowAnswerStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ShowAnswerStatusAsync(MemoriesEdge.AdminService.ManageFeedBack entity) {
            this.ShowAnswerStatusAsync(entity, null);
        }
        
        public void ShowAnswerStatusAsync(MemoriesEdge.AdminService.ManageFeedBack entity, object userState) {
            if ((this.onBeginShowAnswerStatusDelegate == null)) {
                this.onBeginShowAnswerStatusDelegate = new BeginOperationDelegate(this.OnBeginShowAnswerStatus);
            }
            if ((this.onEndShowAnswerStatusDelegate == null)) {
                this.onEndShowAnswerStatusDelegate = new EndOperationDelegate(this.OnEndShowAnswerStatus);
            }
            if ((this.onShowAnswerStatusCompletedDelegate == null)) {
                this.onShowAnswerStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnShowAnswerStatusCompleted);
            }
            base.InvokeAsync(this.onBeginShowAnswerStatusDelegate, new object[] {
                        entity}, this.onEndShowAnswerStatusDelegate, this.onShowAnswerStatusCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MemoriesEdge.AdminService.IwcfAdmin CreateChannel() {
            return new IwcfAdminClientChannel(this);
        }
        
        private class IwcfAdminClientChannel : ChannelBase<MemoriesEdge.AdminService.IwcfAdmin>, MemoriesEdge.AdminService.IwcfAdmin {
            
            public IwcfAdminClientChannel(System.ServiceModel.ClientBase<MemoriesEdge.AdminService.IwcfAdmin> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveAnswers(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("SaveAnswers", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveAnswers(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveAnswers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateAnswers(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("UpdateAnswers", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUpdateAnswers(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UpdateAnswers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsersFeedback(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUsersFeedback", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ViewFeedBack> EndGetUsersFeedback(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ViewFeedBack> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ViewFeedBack>)(base.EndInvoke("GetUsersFeedback", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> EndGetAllUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator>)(base.EndInvoke("GetAllUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUser(string UserName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserName;
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageOperator>)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeStatus(int UserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserId;
                System.IAsyncResult _result = base.BeginInvoke("ChangeStatus", _args, callback, asyncState);
                return _result;
            }
            
            public int EndChangeStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ChangeStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDisplayAllUserDetail(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DisplayAllUserDetail", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageRegisteredUsers> EndDisplayAllUserDetail(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageRegisteredUsers> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageRegisteredUsers>)(base.EndInvoke("DisplayAllUserDetail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDisplaySpecificUser(MemoriesEdge.AdminService.ManageRegisteredUsers manage, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = manage;
                System.IAsyncResult _result = base.BeginInvoke("DisplaySpecificUser", _args, callback, asyncState);
                return _result;
            }
            
            public MemoriesEdge.AdminService.ManageRegisteredUsers EndDisplaySpecificUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                MemoriesEdge.AdminService.ManageRegisteredUsers _result = ((MemoriesEdge.AdminService.ManageRegisteredUsers)(base.EndInvoke("DisplaySpecificUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSecurityQuestions(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSecurityQuestions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.Question> EndGetSecurityQuestions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.Question> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.Question>)(base.EndInvoke("GetSecurityQuestions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCountry(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCountry", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetCountry(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(base.EndInvoke("GetCountry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetState(int CountryId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = CountryId;
                System.IAsyncResult _result = base.BeginInvoke("GetState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(base.EndInvoke("GetState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCity(int StateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = StateId;
                System.IAsyncResult _result = base.BeginInvoke("GetCity", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetCity(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(base.EndInvoke("GetCity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckAvailability(string UserName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserName;
                System.IAsyncResult _result = base.BeginInvoke("CheckAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCheckAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CheckAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertNewUser(MemoriesEdge.AdminService.NewRegisteredUser objNewUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = objNewUser;
                System.IAsyncResult _result = base.BeginInvoke("InsertNewUser", _args, callback, asyncState);
                return _result;
            }
            
            public int EndInsertNewUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("InsertNewUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllCountry(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllCountry", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetAllCountry(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(base.EndInvoke("GetAllCountry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllState(int CountryId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = CountryId;
                System.IAsyncResult _result = base.BeginInvoke("GetAllState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetAllState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(base.EndInvoke("GetAllState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllCity(int StateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = StateId;
                System.IAsyncResult _result = base.BeginInvoke("GetAllCity", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> EndGetAllCity(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.CountryStateCity>)(base.EndInvoke("GetAllCity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckUserAvailability(string UserName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserName;
                System.IAsyncResult _result = base.BeginInvoke("CheckUserAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCheckUserAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CheckUserAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNewUser(MemoriesEdge.AdminService.AddEditOperator objNewUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = objNewUser;
                System.IAsyncResult _result = base.BeginInvoke("AddNewUser", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddNewUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddNewUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDetail(MemoriesEdge.AdminService.AddEditOperator entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("GetDetail", _args, callback, asyncState);
                return _result;
            }
            
            public MemoriesEdge.AdminService.AddEditOperator EndGetDetail(System.IAsyncResult result) {
                object[] _args = new object[0];
                MemoriesEdge.AdminService.AddEditOperator _result = ((MemoriesEdge.AdminService.AddEditOperator)(base.EndInvoke("GetDetail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoginUser(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserName;
                _args[1] = Password;
                System.IAsyncResult _result = base.BeginInvoke("LoginUser", _args, callback, asyncState);
                return _result;
            }
            
            public MemoriesEdge.AdminService.UserLoginRegisterUser EndLoginUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                MemoriesEdge.AdminService.UserLoginRegisterUser _result = ((MemoriesEdge.AdminService.UserLoginRegisterUser)(base.EndInvoke("LoginUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPassword(string UserName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserName;
                System.IAsyncResult _result = base.BeginInvoke("GetPassword", _args, callback, asyncState);
                return _result;
            }
            
            public MemoriesEdge.AdminService.ForgotPassword EndGetPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                MemoriesEdge.AdminService.ForgotPassword _result = ((MemoriesEdge.AdminService.ForgotPassword)(base.EndInvoke("GetPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserPassword(int UserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserId;
                System.IAsyncResult _result = base.BeginInvoke("GetUserPassword", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetUserPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetUserPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePassword(int UserId, string NewPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserId;
                _args[1] = NewPassword;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePassword", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUpdatePassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UpdatePassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllQuestions(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllQuestions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> EndGetAllQuestions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack>)(base.EndInvoke("GetAllQuestions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllAnswers(int aid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = aid;
                System.IAsyncResult _result = base.BeginInvoke("GetAllAnswers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> EndGetAllAnswers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack> _result = ((System.Collections.ObjectModel.ObservableCollection<MemoriesEdge.AdminService.ManageFeedBack>)(base.EndInvoke("GetAllAnswers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveQuestion(MemoriesEdge.AdminService.ManageFeedBack objF, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = objF;
                System.IAsyncResult _result = base.BeginInvoke("SaveQuestion", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveQuestion(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveQuestion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateQuestion(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("UpdateQuestion", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUpdateQuestion(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UpdateQuestion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginShowQuestionStatus(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("ShowQuestionStatus", _args, callback, asyncState);
                return _result;
            }
            
            public MemoriesEdge.AdminService.ManageFeedBack EndShowQuestionStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                MemoriesEdge.AdminService.ManageFeedBack _result = ((MemoriesEdge.AdminService.ManageFeedBack)(base.EndInvoke("ShowQuestionStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDispalyQues(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("DispalyQues", _args, callback, asyncState);
                return _result;
            }
            
            public MemoriesEdge.AdminService.ManageFeedBack EndDispalyQues(System.IAsyncResult result) {
                object[] _args = new object[0];
                MemoriesEdge.AdminService.ManageFeedBack _result = ((MemoriesEdge.AdminService.ManageFeedBack)(base.EndInvoke("DispalyQues", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginShowAnswerStatus(MemoriesEdge.AdminService.ManageFeedBack entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("ShowAnswerStatus", _args, callback, asyncState);
                return _result;
            }
            
            public MemoriesEdge.AdminService.ManageFeedBack EndShowAnswerStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                MemoriesEdge.AdminService.ManageFeedBack _result = ((MemoriesEdge.AdminService.ManageFeedBack)(base.EndInvoke("ShowAnswerStatus", _args, result)));
                return _result;
            }
        }
    }
}
